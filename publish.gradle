version = gittag.gitStamp(customGitRepository).replace('/','_')

task jarWithJavadoc(type: Jar, dependsOn: classes) {
    classifier = 'javadoc'
    from javadoc
    archiveBaseName = project.name
}

task jarWithSources(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    archiveBaseName = project.name
}

task testJar(type: Jar, dependsOn: testClasses) {
    classifier = "tests"
    from sourceSets.test.output
    includeEmptyDirs false
    archiveBaseName = project.name
    include 'com/**', 'META-INF/**', '*.properties'
}

task testSourceJar(type: Jar, dependsOn: testClasses) {
    classifier = 'tests-sources'
    from sourceSets.test.allSource
    includeEmptyDirs false
    archiveBaseName = project.name
    include 'com/**', 'META-INF/**', '*.properties'
}

publishing {

    publications {
        group = customGroup
        mavenJava(MavenPublication) {
            artifactId = customArtifactId
            from components.java
            artifact jarWithSources
            artifact jarWithJavadoc
            println 'Repository Artifact (group=' + group + ', id=' + artifactId + ', version=' + version + ') .'

            pom {
                name = 'My Library'
                description = 'A concise description of my library'

                scm {
                    connection = 'scm:git:git://github.kyndryl.net/SSEOcean/' + customGitRepository + '.git'
                    developerConnection = 'scm:git:ssh://github.kyndryl.net/SSEOcean/' + customGitRepository + '.git'
                    url = 'http://github.kyndryl.net/SSEOcean/' + customGitRepository
                }
            }
        }
    }

    repositories {
        maven {
            name = 'taas'
            def releasesRepoUrl = isspReleasesRepoUrlTaas
            def snapshotsRepoUrl = isspSnapshotsRepoUrlTaas
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username taasUsername
                password taasPassword
            }
        }

    }
}

//Enabling this requires travis encrypted variables for taasUsername (issp@us.kyndryl.net) taasPassword (token)
publishMavenJavaPublicationToTaasRepository.enabled = (rootProject.hasProperty('taasPassword'))
